;;
;; @file idt_load.asm
;; @brief Ассемблерные функции для работы с IDT
;; 
;; Содержит низкоуровневые функции для загрузки IDT
;; и обработки прерываний клавиатуры.
;;

[bits 32]   ; Указываем, что код должен компилироваться в 32-битном режиме

; Экспортируем символы для использования в C-коде
global load_idt          ; Функция загрузки IDT
global keyboard_handler  ; Обработчик прерываний клавиатуры

; Импортируем C-функцию обработки клавиатуры
extern keyboard_handler_main

;;
;; @brief Загружает IDT и включает прерывания
;; @param edx Указатель на структуру описателя IDT
;;
load_idt:
    mov edx, [esp + 4]  ; Получаем параметр из стека (указатель на IDT)
    lidt [edx]          ; Загружаем IDT
    sti                 ; Разрешаем прерывания (Set Interrupt Flag)
    ret                 ; Возврат из функции

;;
;; @brief Обработчик прерывания клавиатуры
;; 
;; Сохраняет регистры, вызывает C-обработчик, затем восстанавливает регистры
;; и возвращает управление через iretd
;;
keyboard_handler:
    pushad              ; Сохраняем все основные регистры общего назначения
    call keyboard_handler_main  ; Вызываем C-обработчик
    popad               ; Восстанавливаем регистры
    iretd               ; Возврат из прерывания (32-битная версия iret)